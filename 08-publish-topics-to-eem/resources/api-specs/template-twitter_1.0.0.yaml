asyncapi: 2.1.0

info:
  version: 0.0.1
  title: Tweets
  x-ibm-name: twitter
  x-ibm-summary: Tweets from the public twitter timeline
  description: >+
    Events emitted tweets are published to twitter using relevant keywords.
  termsOfService: 'https://developer.twitter.com/en/developer-terms/agreement-and-policy'
  contact:
    name: Dale Lane
    url: 'https://developer.twitter.com/en/docs'
    email: dale.lane@uk.ibm.com

channels:
  TWITTER.KAFKA:
    subscribe:
      message:
        name: twitterEvent
        title: Tweet
        summary: Tweet mentioning Kafka
        description: >-
          This event contains details of a tweet from Twitter.
        schemaFormat: application/vnd.aai.asyncapi;version=2.0.0
        contentType: application/json
        payload:
          type: object
          required:
            - CreatedAt
            - Id
            - Text
          properties:
            CreatedAt:
              description: timestamp when the tweet was created
              type: integer
            Id:
              description: unique ID for the tweet
              type: integer
              format: int64
            Text:
              description: message posted onto twitter
              type: string
            Source:
              description: HTML with a link to the application used to post the tweet
              type: string
            User:
              $ref: '#/components/schemas/TwitterUser'
            Lang:
              description: code for the language the tweet is in
              type: string

          additionalProperties: true


servers:
  cluster:
    url: $(bootstrapServerAddress)
    protocol: kafka-secure
    security:
      - X-IBM-Client-Id: []

components:
  securitySchemes:
    X-IBM-Client-Id:
      type: plain
      description: The credential provided should be in SASL-PLAIN format
  schemas:
    TwitterUser:
      name: twitterUser
      title: Twitter user details
      schemaFormat: application/vnd.aai.asyncapi;version=2.0.0
      contentType: application/json
      payload:
        type: object
        required:
          - Id
          - Name
          - ScreenName
        properties:
          Id:
            description: unique id for the user who posted the Tweet
            type: integer
            format: int64
          Name:
            description: name of the user who posted the tweet
            type: string
          ScreenName:
            description: username for the user who posted the tweet
            type: string
          Description:
            description: description of the user who posted the tweet
            type: string
          Location:
            description: location of the user who posted the tweet
            type: string


x-ibm-configuration:
  enforced: true
  phase: realized
  gateway: event-gateway
  assembly:
    execute:
      - invoke-kafka:
          title: invoke-kafka
          version: 1.0.0
          bootstrap.servers: $(bootstrapServerAddress)
          sasl.mechanism: SCRAM-SHA-512
          security.protocol: SASL_SSL
          username: "<< PLACEHOLDER >>"
          password: "<< PLACEHOLDER >>"
          transport.cacert: "<< PLACEHOLDER >>"
          clusterconfigid: bfd22eb8-3103-4ebd-876a-4b0d7891d1e4
  properties:
    bootstrapServerAddress:
      value: "<< PLACEHOLDER >>"
  type: asyncapi
  testable: false
  cors:
    enabled: false
